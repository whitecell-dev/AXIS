# pyproject.toml
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "axis"
version = "0.1.0"
description = "Deterministic JSON math engine built on relational algebra and lambda calculus"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "AXIS Contributors", email = "axis@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Typing :: Typed"
]
keywords = [
    "relational-algebra",
    "json",
    "deterministic",
    "lambda-calculus", 
    "audit",
    "verification",
    "data-processing"
]

dependencies = [
    "pyyaml>=6.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0"
]

test = [
    "pytest>=7.4.0", 
    "pytest-cov>=4.1.0",
    "hypothesis>=6.82.0"
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0", 
    "mkdocstrings[python]>=0.22.0"
]

[project.scripts]
axis-pipes = "axis.axis_pipes:cli"
axis-rules = "axis.axis_rules:cli" 
axis-adapters = "axis.axis_adapters:cli"
axis-structures = "axis.axis_structures:cli"

[project.urls]
Homepage = "https://github.com/example/axis"
Documentation = "https://axis.readthedocs.io/"
Repository = "https://github.com/example/axis.git"
Issues = "https://github.com/example/axis/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["axis*"]

[tool.setuptools.package-data]
axis = ["*.yaml", "*.json", "examples/*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
